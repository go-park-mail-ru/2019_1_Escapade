version: '3'
services:

  traefik:
    image: traefik:v1.7.18
    command: 
      - "--api" 
      - "--web"
      - " --docker"
      - " --docker.domain=docker.localhost"  #--consul --consul.endpoint=consul:8500 # Enables the web UI and tells Traefik to listen to docker
    ports:
      - "8081:80"     # The HTTP port
      - "8079:8080" # The Web UI (enabled by --api)
    #network_mode: "host"
    #hostname: localhost
    labels:
      - "traefik.docker.network=backend"
      - "traefik.port=8080"
    networks: 
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./extra/traefik/traefik.toml:/traefik.toml # Traefik configuration file

  pg:
    image: smartphonejava/api:latest
    build:
      dockerfile: Dockerfile
      context: ./extra/postgresql/main/
    networks: 
      - backend
    ports:
      - "5429:5432"    

  pg-auth:
    image: localhost:11.2-alpine
    environment:
      POSTGRES_USER: 'auth' 
      POSTGRES_PASSWORD: 'auth'
      POSTGRES_DB: 'authbase'
    networks: 
      - backend
    ports:
      - "5431:5432"    

  pg-ery:
    image: smartphonejava/pg-ery:latest    
    build:
      dockerfile: Dockerfile
      context: ./extra/postgresql/ery/
    networks: 
      - backend
    ports:
      - "5430:5432"   

#sudo docker inspect --format '{{(index .NetworkSettings.Networks "2019_1_escapade_default").IPAddress }}' 2019_1_escapade_api_1
#curl -H Host:api.2019-1-escapade.docker.localhost http://127.0.0.1/api/user
#curl -H Host:api.consul.localhost http://127.0.0.1:8081
# ab -n 10 -H 'Host:api.consul.localhost' http://localhost:8081/
# sudo docker-compose up --scale api=5 api

#http://api.consul.localhost:8081/health

  api:
    image: smartphonejava/api:latest    
    build:
      dockerfile: ./cmd/services/api/Dockerfile
      context: .
    depends_on:
      - "pg"
      - "consul"
      - "consul-server"
      - "consul-agent"
      - "auth"
    ports:
      - 3001-3021:3001
    environment:
      - CONSUL_ADDRESS=consul-agent
      - AUTH_ADDRESS=http://auth:3003 #http://auth.consul.localhost:8081 
      #.consul.localhost
    command: /bin/sh -c "./bin/api cmd/services/api/api.json internal/photo/photo.json secret.json 3001"
    labels:
      - "traefik.enable=false"
      - "org.label-schema.group=monitoring"
    #dns: traefik 
    #network_mode: "host"
    networks: 
      - backend
    restart: on-failure
    logging:
      options:
        max-size: 10m

  # ery:
  #   build:
  #     dockerfile: ./cmd/services/ery/Dockerfile
  #     context: .
  #   depends_on:
  #     - "pg-ery"
  #     - "consul"
  #     - "auth"
  #   ports:
  #     - 3100:3100
  #   environment:
  #     - CONSUL_ADDRESS=consul-agent-1
  #   command: /bin/sh -c "go run cmd/services/ery/main.go cmd/services/ery/ery.json internal/photo/eryphoto.json cmd/services/ery/secret2.json 3100 8500"
  #   volumes:
  #   - ./:/escapade
  #   logging:
  #     options:
  #       max-size: 10m

  chat:
    image: smartphonejava/chat:latest
    build:
      dockerfile: ./cmd/services/chat/Dockerfile
      context: .
    depends_on:
      - "pg"
    environment:
      - CONSUL_ADDRESS=consul-agent
    ports:
      - 3066-3087:3060
    networks: 
      - backend
    labels:
      - "traefik.enable=false"
      - "org.label-schema.group=monitoring"
    command: /bin/sh -c "./bin/chat cmd/services/chat/chat.json 3060"
    logging:
      options:
        max-size: 10m

  ### auth ###

  auth:
    image: smartphonejava/auth:latest
    build:
      dockerfile: ./cmd/services/auth/Dockerfile
      context: .
    depends_on:
      - "pg"
      - "pg-auth"
      - "pg-ery"
    ports:
      - 3022-3043:3003
    #dns: 127.0.0.1 
    networks: 
      - backend
    environment:
      - CONSUL_ADDRESS=consul-agent
      #/bin/sh -c "./wait-for-it.sh pg:5432 && ./wait-for-it.sh auth:3333 && ./bin/api"
      # ./wait-for-it.sh pg:5432 &&  ./wait-for-it.sh  pg-auth:5432 && ./wait-for-it.sh pg-ery:5432 &&
    command: /bin/sh -c " ./bin/auth cmd/services/auth/auth.json 3003"
    labels:
      - "traefik.enable=false"
      - "org.label-schema.group=monitoring"
    logging:
      options:
        max-size: 10m
        
  # loader:
  #   build:
  #     dockerfile: ./cmd/services/configLoader/Dockerfile
  #     context: .
  #   depends_on:
  #     - "consul-agent-1"
  #     - "vault"
  #   ports:
  #     - 3007:3007
  #   command: /bin/sh -c "./bin/loader config.json"
  #   logging:
  #     options:
  #       max-size: 10m

  game:
    image: smartphonejava/game:latest
    build:
      dockerfile: ./cmd/services/game/Dockerfile
      context: .
    depends_on:
       - "pg"
    ports:
      - 3044-3055:3002
    networks: 
      - backend
    labels:
      - "traefik.enable=false"
      - "org.label-schema.group=monitoring"
    environment:
      - CONSUL_ADDRESS=consul-agent
      - AUTHSERVICE_URL=auth:3333
      - PORT_GAME_URL=:3002
    command: /bin/sh -c "./bin/game cmd/services/game/game.json internal/photo/photo.json secret.json internal/constants/field.json internal/constants/room.json 3002"

  # history:
  #   build:
  #     dockerfile: ./history/Dockerfile
  #     context: .
  #   depends_on:
  #     - "pg"
  #     - "auth"
  #   ports:
  #     - 3004:3004
  #   environment:
  #     - CONSUL_ADDRESS=consul
  #     - DATABASE_URL=postgres://docker:docker@pg:5432/docker?sslmode=disable
  #     - AUTHSERVICE_URL=auth:3333
  #     - PORT_HISTORY_URL=:3004
  #   command: /bin/sh -c "./bin/history"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks: 
      - backend
    ports:
      - "9090:9090"
    labels:
     - "traefik.frontend.rule=Host:prometheus.localhost"
     - "traefik.port=9090"
     - "traefik.docker.network=inbound"
    
  grafana:
    image: grafana/grafana
    container_name: grafana
    networks: 
      - backend
    environment:
     - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
     - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
     - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
    labels:
      - "traefik.port=3000"
      - "traefik.docker.network=backend"
      - "traefik.frontend.rule=Host:grafana.localhost"

  ### discovery ###

  ## consul servers ##
  consul-server:
    image: smartphonejava/consul-server:latest
    build:
      context: ./extra/consul
      dockerfile: Dockerfile
    ports:
      - 8529-8549:8500
      - 8329-8349:8301
    networks: 
      - backend
    command: agent -server -join consul -ui-dir /ui -config-file=/consul/config/server/consul-config.json

  ## consul bootstrap ##
  consul:
    image: smartphonejava/consul:latest
    build:
      context: ./extra/consul
      dockerfile: Dockerfile
    ports:
      - 8400:8400
      - 8500:8500
      - 8600:53/udp
    networks: 
      - backend
    command: agent -server -bootstrap -node bootstrap -bind 0.0.0.0 -client 0.0.0.0 -ui -config-file=/consul/config/bootstrap/consul-config.json
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  ## consul agents ##
  consul-agent:
    image: smartphonejava/consul-agent:latest
    build:
      context: ./extra/consul
      dockerfile: Dockerfile
    ports:
     # - 8550-8570:8500
      - 8501:8500
      - 8300:8300
      - 8301:8301
      #- 8350-8370:8301
    networks: 
      - backend
    command: agent -join consul-server -bind 0.0.0.0 -client 0.0.0.0 -ui -config-file=/consul/config/client/consul-config.json   
    labels:
      - "traefik.frontend.rule=Host:consul-agent.2019-1-escapade.docker.localhost"
 
  front:
    image: smartphonejava/front:latest
    build:
      dockerfile: Dockerfile
      context: ./extra/front
    ports:
      - "8080:8080"   
    command: npm start
  # vault:
  #   build:
  #     context: ./extra/vault
  #     dockerfile: Dockerfile
  #   ports:
  #     - 8200:8200
  #   volumes:
  #     - ./extra/vault/config:/vault/config
  #     - ./extra/vault/policies:/vault/policies
  #     - ./extra/vault/data:/vault/data
  #     - ./extra/vault/logs:/vault/logs
  #   environment:
  #     - VAULT_ADDR=http://127.0.0.1:8200
  #   command: server -config=config/vault-config.json
  #   cap_add:
  #     - IPC_LOCK
  #   depends_on:
  #     - consul-agent-1

  alertmanager:
    image: prom/alertmanager:v0.19.0
    container_name: alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - backend

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - backend

  cadvisor:
    image: google/cadvisor:v0.33.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    ports:
      - 8085:8080
    networks:
      - backend
    privileged: true

#sudo docker inspect --format '{{(index .NetworkSettings.Networks "2019_1_escapade_default").IPAddress }}' 2019_1_escapade_api_1
#curl -H Host:api.2019-1-escapade.docker.localhost http://127.0.0.1/api/user
#curl -H Host:api.consul.localhost http://127.0.0.1:8081
# ab -n 10 -H 'Host:api.consul.localhost' http://localhost:8081/
# sudo docker-compose up --scale api=5 api

#http://api.consul.localhost:8081/health

networks:
  backend:
    driver: bridge

